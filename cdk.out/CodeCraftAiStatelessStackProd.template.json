{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CodeCraftAiStatelessStackProd/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/Vpc/VPCGW"
   }
  },
  "EcsCluster97242B84": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/EcsCluster/Resource"
   }
  },
  "IngestionServiceRole01363068": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "IAM role for the CodeCraft AI Ingestion Service"
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/IngestionServiceRole/Resource"
   }
  },
  "IngestionServiceRoleDefaultPolicyFA5DA5D4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttDataBucketE3889A50Arn98F8399F"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttDataBucketE3889A50Arn98F8399F"
           },
           "/raw/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttVectorStoreBucketABEF753FArn166CF646"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttVectorStoreBucketABEF753FArn166CF646"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "bedrock:InvokeModel",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IngestionServiceRoleDefaultPolicyFA5DA5D4",
    "Roles": [
     {
      "Ref": "IngestionServiceRole01363068"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/IngestionServiceRole/DefaultPolicy/Resource"
   }
  },
  "ApiServiceRole7D72F03E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "IAM role for the CodeCraft AI API Service"
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiServiceRole/Resource"
   }
  },
  "ApiServiceRoleDefaultPolicyDE208E4E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttVectorStoreBucketABEF753FArn166CF646"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttVectorStoreBucketABEF753FArn166CF646"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "bedrock:InvokeModel",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiServiceRoleDefaultPolicyDE208E4E",
    "Roles": [
     {
      "Ref": "ApiServiceRole7D72F03E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiServiceRole/DefaultPolicy/Resource"
   }
  },
  "ApiServiceLB08B891CD": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ApiServiceLBSecurityGroup5C16BEF8",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
     },
     {
      "Ref": "VpcPublicSubnet2Subnet691E08A3"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677",
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/LB/Resource"
   }
  },
  "ApiServiceLBSecurityGroup5C16BEF8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB CodeCraftAiStatelessStackProdApiServiceLB3DCFE0AB",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/LB/SecurityGroup/Resource"
   }
  },
  "ApiServiceLBSecurityGrouptoCodeCraftAiStatelessStackProdApiServiceSecurityGroupD51D6BD6800083228CBF": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ApiServiceSecurityGroup2592096B",
      "GroupId"
     ]
    },
    "FromPort": 8000,
    "GroupId": {
     "Fn::GetAtt": [
      "ApiServiceLBSecurityGroup5C16BEF8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 8000
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/LB/SecurityGroup/to CodeCraftAiStatelessStackProdApiServiceSecurityGroupD51D6BD6:8000"
   }
  },
  "ApiServiceLBPublicListener1394DF3E": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ApiServiceLBPublicListenerECSGroup14A87FE9"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ApiServiceLB08B891CD"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/LB/PublicListener/Resource"
   }
  },
  "ApiServiceLBPublicListenerECSGroup14A87FE9": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 30,
    "HealthCheckPath": "/health",
    "HealthCheckTimeoutSeconds": 5,
    "HealthyThresholdCount": 2,
    "Matcher": {
     "HttpCode": "200"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 2,
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "ApiServiceTaskDefDF3191FB": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "APP_MODE",
        "Value": "prod"
       },
       {
        "Name": "AWS_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "VECTOR_STORE_BUCKET",
        "Value": {
         "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputRefVectorStoreBucketABEF753FF2C423C3"
        }
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttApiEcrRepoCD93CD24Arn106B67AD"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttApiEcrRepoCD93CD24Arn106B67AD"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputRefApiEcrRepoCD93CD24F1942A00"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "ApiServiceTaskDefwebLogGroup57352A09"
        },
        "awslogs-stream-prefix": "api-service-prod",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 8000,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ApiServiceTaskDefExecutionRole43B90DD6",
      "Arn"
     ]
    },
    "Family": "CodeCraftAiStatelessStackProdApiServiceTaskDefF8361891",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ApiServiceRole7D72F03E",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/TaskDef/Resource"
   }
  },
  "ApiServiceTaskDefwebLogGroup57352A09": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/TaskDef/web/LogGroup/Resource"
   }
  },
  "ApiServiceTaskDefExecutionRole43B90DD6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/TaskDef/ExecutionRole/Resource"
   }
  },
  "ApiServiceTaskDefExecutionRoleDefaultPolicyDCB48050": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttApiEcrRepoCD93CD24Arn106B67AD"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ApiServiceTaskDefwebLogGroup57352A09",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiServiceTaskDefExecutionRoleDefaultPolicyDCB48050",
    "Roles": [
     {
      "Ref": "ApiServiceTaskDefExecutionRole43B90DD6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ApiService199661B5": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "EcsCluster97242B84"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 8000,
      "TargetGroupArn": {
       "Ref": "ApiServiceLBPublicListenerECSGroup14A87FE9"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "ApiServiceSecurityGroup2592096B",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VpcPrivateSubnet1Subnet536B997A"
       },
       {
        "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "ApiServiceTaskDefDF3191FB"
    }
   },
   "DependsOn": [
    "ApiServiceLBPublicListenerECSGroup14A87FE9",
    "ApiServiceLBPublicListener1394DF3E",
    "ApiServiceRoleDefaultPolicyDE208E4E",
    "ApiServiceRole7D72F03E"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/Service/Service"
   }
  },
  "ApiServiceSecurityGroup2592096B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CodeCraftAiStatelessStackProd/ApiService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "DependsOn": [
    "ApiServiceRoleDefaultPolicyDE208E4E",
    "ApiServiceRole7D72F03E"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/Service/SecurityGroup/Resource"
   }
  },
  "ApiServiceSecurityGroupfromCodeCraftAiStatelessStackProdApiServiceLBSecurityGroupF347B0E980004EDA5C0F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 8000,
    "GroupId": {
     "Fn::GetAtt": [
      "ApiServiceSecurityGroup2592096B",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ApiServiceLBSecurityGroup5C16BEF8",
      "GroupId"
     ]
    },
    "ToPort": 8000
   },
   "DependsOn": [
    "ApiServiceRoleDefaultPolicyDE208E4E",
    "ApiServiceRole7D72F03E"
   ],
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/ApiService/Service/SecurityGroup/from CodeCraftAiStatelessStackProdApiServiceLBSecurityGroupF347B0E9:8000"
   }
  },
  "IngestionTaskDef0CBA300A": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "APP_MODE",
        "Value": "prod"
       },
       {
        "Name": "AWS_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "VECTOR_STORE_BUCKET",
        "Value": {
         "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputRefVectorStoreBucketABEF753FF2C423C3"
        }
       },
       {
        "Name": "DATA_BUCKET",
        "Value": {
         "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputRefDataBucketE3889A50250F5285"
        }
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttIngestionEcrRepoFF775F78ArnC9E2CCC5"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttIngestionEcrRepoFF775F78ArnC9E2CCC5"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputRefIngestionEcrRepoFF775F786EEF0D13"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "IngestionTaskDefIngestionContainerLogGroup33427E20"
        },
        "awslogs-stream-prefix": "ingestion-task",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "IngestionContainer"
     }
    ],
    "Cpu": "1024",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "IngestionTaskDefExecutionRole07CD4E76",
      "Arn"
     ]
    },
    "Family": "CodeCraftAiStatelessStackProdIngestionTaskDef2F8F08D1",
    "Memory": "2048",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "IngestionServiceRole01363068",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/IngestionTaskDef/Resource"
   }
  },
  "IngestionTaskDefIngestionContainerLogGroup33427E20": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/IngestionTaskDef/IngestionContainer/LogGroup/Resource"
   }
  },
  "IngestionTaskDefExecutionRole07CD4E76": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/IngestionTaskDef/ExecutionRole/Resource"
   }
  },
  "IngestionTaskDefExecutionRoleDefaultPolicy180453CA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "CodeCraftAiStatefulStackProd:ExportsOutputFnGetAttIngestionEcrRepoFF775F78ArnC9E2CCC5"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "IngestionTaskDefIngestionContainerLogGroup33427E20",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IngestionTaskDefExecutionRoleDefaultPolicy180453CA",
    "Roles": [
     {
      "Ref": "IngestionTaskDefExecutionRole07CD4E76"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/IngestionTaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32S3W7CMAyFn4X7kAmYtGvGGEJCW1UQt8hNTfEISZU4IFT13aem/HRs2pWPv5yk9lGHcvD8Ikc9OPm+yvd9TZmslgxqL+DkNxWqoazWpRKTrVknE5GETJNahswgN+yuUhsYV5BpvPM7G3tvFQGTNTdzI6bzpCkfwDNgPMFZJI6OwHh/eG4YncGboZ3k0o2ZQe0OaFgsUQVHfJ45G8o4w79gWjj0/heem8hrgcrLaqKDZ3SN6yrfwRXQbOX3b7glQ9edHok1DGTQddjl7hLdkVSbUytrQXCQVWrb9GJNrCYV121VHGlTAjdxeDkuS00qJrqwkL+CBqMwf/gEavBMSlvIs+ggUxyHsvr7dlz0R9/1kWc0F89Vd85X4ArkW9idthbaFl5WC1vcjq+6rkWK3gbX5vEZuAzt/9ShE2vymGAtkjPvrHkaycFIjnpfnqjvgmE6oEzb+g3P9rgh0wIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "CodeCraftAiStatelessStackProd/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ApiServiceLoadBalancerDNSBF9EB7FC": {
   "Value": {
    "Fn::GetAtt": [
     "ApiServiceLB08B891CD",
     "DNSName"
    ]
   }
  },
  "ApiServiceServiceURL2EB28DB2": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "ApiServiceLB08B891CD",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "EcsClusterName": {
   "Value": {
    "Ref": "EcsCluster97242B84"
   }
  },
  "IngestionTaskDefArn": {
   "Value": {
    "Ref": "IngestionTaskDef0CBA300A"
   }
  },
  "IngestionServiceRoleArn": {
   "Value": {
    "Fn::GetAtt": [
     "IngestionServiceRole01363068",
     "Arn"
    ]
   }
  },
  "ApiServiceRoleArn": {
   "Value": {
    "Fn::GetAtt": [
     "ApiServiceRole7D72F03E",
     "Arn"
    ]
   }
  },
  "ApiLoadBalancerDns": {
   "Value": {
    "Fn::GetAtt": [
     "ApiServiceLB08B891CD",
     "DNSName"
    ]
   }
  },
  "ApiServiceName": {
   "Value": {
    "Fn::GetAtt": [
     "ApiService199661B5",
     "Name"
    ]
   }
  },
  "PrivateSubnetIds": {
   "Description": "Comma-separated list of private subnet IDs for the ECS tasks",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "VpcPrivateSubnet1Subnet536B997A"
      },
      ",",
      {
       "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}
